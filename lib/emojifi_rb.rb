require "emojifi_rb/version"

module EmojifiRb
  EMOJI_INDEX = [9728,9729,9748,9924,9889,127744,127745,127746,127747,127748,127749,127750,127751,127752,10052,9925,127753,127754,127755,127756,127759,127761,127764,127763,127769,127765,127771,127775,127776,128336,128337,128338,128339,128340,128341,128342,128343,128344,128345,128346,128347,8986,8987,9200,9203,9800,9801,9802,9803,9804,9805,9806,9807,9808,9809,9810,9811,9934,127808,127799,127793,127809,127800,127801,127810,127811,127802,127803,127796,127797,127806,127805,127812,127792,127804,127807,127826,127820,127822,127818,127827,127817,127813,127814,127816,127821,127815,127825,127823,128064,128066,128067,128068,128069,128132,128133,128134,128135,128136,128100,128102,128103,128104,128105,128106,128107,128110,128111,128112,128113,128114,128115,128116,128117,128118,128119,128120,128121,128122,128123,128124,128125,128126,128127,128128,128129,128130,128131,128012,128013,128014,128020,128023,128043,128024,128040,128018,128017,128025,128026,128027,128028,128029,128030,128032,128033,128034,128036,128037,128038,128035,128039,128041,128031,128044,128045,128047,128049,128051,128052,128053,128054,128055,128059,128057,128058,128046,128048,128056,128062,128050,128060,128061,128544,128553,128562,128542,128565,128560,128530,128525,128548,128540,128541,128523,128536,128538,128567,128563,128515,128517,128518,128513,128514,128522,9786,128516,128546,128557,128552,128547,128545,128524,128534,128532,128561,128554,128527,128531,128549,128555,128521,128570,128568,128569,128573,128571,128575,128574,128572,128576,128581,128582,128583,128584,128586,128585,128587,128588,128589,128590,128591,127968,127969,127970,127971,127973,127974,127975,127976,127977,127978,127979,9962,9970,127980,127983,127984,127981,9875,127982,128507,128508,128509,128510,128511,128094,128095,128096,128097,128098,128099,128083,128085,128086,128081,128084,128082,128087,128088,128089,128090,128091,128092,128093,128176,128177,128185,128178,128179,128180,128181,128184,127464,127465,127466,127467,127468,127470,127471,127472,127479,127482,128293,128294,128295,128296,128297,128298,128299,128302,128303,128304,128305,128137,128138,127344,127345,127374,127358,127872,127873,127874,127876,127877,127884,127878,127880,127881,127885,127886,127891,127890,127887,127879,127888,127875,127882,127883,127889,128223,9742,128222,128241,128242,128221,128224,9993,128232,128233,128234,128235,128238,128240,128226,128227,128225,128228,128229,128230,128231,128288,128289,128290,128291,128292,10002,128186,128187,9999,128206,128188,128189,128190,128191,128192,9986,128205,128195,128196,128197,128193,128194,128211,128214,128212,128213,128215,128216,128217,128218,128219,128220,128203,128198,128202,128200,128201,128199,128204,128210,128207,128208,128209,127933,9918,9971,127934,9917,127935,127936,127937,127938,127939,127940,127942,127944,127946,128643,128647,9410,128644,128645,128663,128665,128652,128655,128674,9992,9973,128649,128640,128676,128661,128666,128658,128657,128659,9981,127359,128677,128679,128680,9832,9978,127904,127905,127906,127907,127908,127909,127910,127911,127912,127913,127914,127915,127916,127917,127918,126980,127919,127920,127921,127922,127923,127924,127183,127925,127926,127927,127928,127929,127930,127931,127932,12349,128247,128249,128250,128251,128252,128139,128140,128141,128142,128143,128144,128145,128146,128286,169,174,8482,8505,35,49,50,51,52,53,54,55,56,57,48,128287,128246,128243,128244,127828,127833,127856,127836,127838,127859,127846,127839,127841,127832,127834,127837,127835,127842,127843,127857,127858,127847,127830,127845,127840,127829,127831,127848,127849,127850,127851,127852,127853,127854,127855,127844,127860,9749,127864,127866,127861,127862,127863,127867,127865,8599,8600,8598,8601,10548,10549,8596,8597,11014,11015,10145,11013,9654,9664,9193,9194,9195,9196,128314,128315,128316,128317,11093,10060,10062,10071,8265,8252,10067,10068,10069,12336,10160,10175,10084,128147,128148,128149,128150,128151,128152,128153,128154,128155,128156,128157,128158,128159,9829,9824,9830,9827,128684,128685,9855,128681,9888,9940,9851,128690,128694,128697,128698,128704,128699,128701,128702,128700,128682,128683,10004,127377,127378,127379,127380,127381,127382,127383,127384,127385,127386,127489,127490,127538,127539,127540,127541,127542,127514,127543,127544,127545,127535,127546,12953,12951,127568,127569,10133,10134,10006,10135,128160,128161,128162,128163,128164,128165,128166,128167,128168,128169,128170,128171,128172,10024,10036,10035,9898,9899,128308,128309,128306,128307,11088,11036,11035,9643,9642,9725,9726,9723,9724,128310,128311,128312,128313,10055,128174,128175,8617,8618,128259,128266,128267,128268,128269,128270,128274,128275,128271,128272,128273,128276,9745,128280,128278,128279,128281,128282,128283,128284,128285,9989,9994,9995,9996,128074,128077,9757,128070,128071,128072,128073,128075,128079,128076,128078,128080]

  def self.encode input
    input.bytes
    .map { |x| EMOJI_INDEX.fetch x }
    .map { |x| [x].pack "U" }
    .join
  end

  def self.decode input
    input.codepoints
    .map { |c| EMOJI_INDEX.index c }
    .pack("U*").force_encoding("utf-8")
  end
end
